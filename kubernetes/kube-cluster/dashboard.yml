- hosts: master
  become: yes
  tasks:
    - name: Check that the kubernetes-dashboard.yaml exists
      become: true
      become_user: ubuntu
      stat:
        path:  $HOME/kubernetes-dashboard.yaml
      register: kubernetes_dashboard_configuration      

    - name:  Create the dashboard file, if it doesnt exist already Dashboard
      become: true
      become_user: ubuntu
      get_url: 
        url: https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
        dest: $HOME/kubernetes-dashboard.yaml
        force: yes
        mode: 0664
        owner: ubuntu
        validate_certs: no
      when: kubernetes_dashboard_configuration.stat.exists == False 

    - name: Check that the kubernetes-dashboard.yaml exists
      become: true
      become_user: ubuntu
      stat:
        path:  $HOME/kubernetes-dashboard.yaml
      register: kubernetes_dashboard_yaml

    - name: Get dashboard configuration
      become: yes
      become_user: ubuntu
      shell: "echo '  type: NodePort' >> kubernetes-dashboard.yaml"
      args:
        chdir: $HOME
      when: kubernetes_dashboard_yaml.stat.exists == True 
      
    - name: Install Dashboard
      become: yes
      become_user: ubuntu
      shell: kubectl create -f kubernetes-dashboard.yaml && rm kubernetes-dashboard.yaml
      args:
        chdir: $HOME
      when: kubernetes_dashboard_yaml.stat.exists == True        

    - name: Create an user admin file
      become: yes
      become_user: ubuntu
      copy:
        content: |
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: admin-user
            namespace: kube-system
        dest: $HOME/admin-user.yaml

    - name: Check user admin file exists
      become: true
      become_user: ubuntu
      stat:
        path:  $HOME/admin-user.yaml
      register: admin_user_yaml

    - name: Create an admin role file
      become: yes
      become_user: ubuntu      
      copy:
        content: |
          apiVersion: rbac.authorization.k8s.io/v1beta1
          kind: ClusterRoleBinding
          metadata:
            name: admin-user
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
          - kind: ServiceAccount
            name: admin-user
            namespace: kube-system
        dest: $HOME/role-binding.yaml

    - name: Check user admin role file exists
      become: true
      become_user: ubuntu
      stat:
        path:  $HOME/role-binding.yaml
      register: role_binding_yaml

    - name: Create an admin user that will be needed in order to access the Kubernetes Dashboard
      become: yes
      become_user: ubuntu
      shell: kubectl create -f admin-user.yaml && rm admin-user.yaml
      args:
        chdir: $HOME
      when: admin_user_yaml.stat.exists == True  

    - name: Create an admin role that will be needed in order to access the Kubernetes Dashboard
      become: yes
      become_user: ubuntu
      shell: kubectl create -f role-binding.yaml && rm role-binding.yaml
      args:
        chdir: $HOME
      when: role_binding_yaml.stat.exists == True  

    # - name: Create an admin user that will be needed in order to access the Kubernetes Dashboard
    #   become: yes
    #   become_user: ubuntu
    #   shell:  kubectl create serviceaccount cluster-admin-dashboard-sa --namespace=kube-system
    #   args:
    #     chdir: $HOME
      
    # - name: Create an admin role that will be needed in order to access the Kubernetes Dashboard
    #   become: yes
    #   become_user: ubuntu
    #   shell:  kubectl create clusterrolebinding cluster-admin-dashboard-sa --clusterrole=cluster-admin --serviceaccount=default:cluster-admin-dashboard-sa
    #   args:
    #     chdir: $HOME

   
    - name: Show token
      become: yes
      become_user: ubuntu
      shell: kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') | grep "token:"
      register: cluster_admin_dashboard_show_token_raw
      args:
        chdir: $HOME

    - name: Show dashboard port access
      become: yes
      become_user: ubuntu
      shell: kubectl describe services kubernetes-dashboard --namespace=kube-system|grep -w "NodePort:" | cut -f1 -d'/'|grep -o -E "[0-9]+" |tr -d '\t'
      register: cluster_dashboard_port_raw
      args:
        chdir: $HOME   

    - name: Dashboard join command
      set_fact:
        join_command: "{{ cluster_dashboard_port_raw.stdout_lines[0] }}" 

    - name: Show dashboard access
      become: yes
      become_user: ubuntu
      shell: echo "https://{{ hostvars['master'].ansible_default_ipv4.address}}:{{ hostvars['master'].join_command }}"
      register: cluster_dashboard_show_raw
      args:
        chdir: $HOME

    - debug: msg={{ cluster_admin_dashboard_show_token_raw.stdout }}             
    - debug: msg={{ cluster_dashboard_show_raw.stdout }}
